{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","components/Navbar.js","assets/trashcan.svg","firebase/config.js","components/RecipeList.js","pages/home/Home.js","pages/recipe/Recipe.js","pages/search/Search.js","hooks/useFetch.js","pages/create/Create.js","assets/mode-icon.svg","components/ThemeSelector.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","Navbar","className","style","background","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","RecipeList","recipes","length","map","recipe","title","cookingTime","method","substring","id","src","Trashcan","alt","onClick","recipeID","collection","doc","delete","Home","useState","data","setdata","isPending","setisPending","error","seterror","useEffect","unsub","onSnapshot","snapshot","empty","results","docs","forEach","push","err","message","Recipe","useParams","setIsPending","setError","setRecipe","exists","ingredients","ing","Search","queryString","useLocation","search","query","URLSearchParams","get","url","setData","options","setoptions","postData","headers","body","JSON","stringify","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","statusText","json","name","console","log","abort","useFetch","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","setIngredients","ingredientInput","useRef","history","useHistory","handleSubmit","e","preventDefault","add","onSubmit","onChange","target","required","ref","trim","includes","prevIngredients","current","focus","i","themeColors","ThemeSelector","modeIcon","filter","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69cc74d7.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nexport const ThemeContext = createContext();\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_COLOR\":\r\n      return { ...state, color: action.payload };\r\n    case \"CHANGE_MODE\":\r\n      return { ...state, mode: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport function ThemeProvider({ children }) {\r\n  const [state, dispatch] = useReducer(themeReducer, {\r\n    color: \"#58249c\",\r\n    mode: \"dark\",\r\n  });\r\n  const changeColor = (color) => {\r\n    dispatch({\r\n      type: \"CHANGE_COLOR\",\r\n      payload: color,\r\n    });\r\n  };\r\n  const changeMode = (mode) => {\r\n    dispatch({\r\n      type: \"CHANGE_MODE\",\r\n      payload: mode,\r\n    });\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={{ ...state, changeColor, changeMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useTheme() must be used inside a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\n\r\n// styles\r\nimport \"./Navbar.css\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nexport default function Navbar() {\r\n  const { color } = useTheme();\r\n\r\n  return (\r\n    <div className=\"navbar\" style={{ background: color }}>\r\n      <nav>\r\n        <Link to=\"/\" className=\"brand\">\r\n          <h1>Cooking Ninja</h1>\r\n        </Link>\r\n        <Link to=\"/create\">Create Recipe</Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/trashcan.1129c53a.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJvu7zGkzzvyvqWhQdEDscvChlUHoi1eI\",\r\n  authDomain: \"recipekart-190b9.firebaseapp.com\",\r\n  projectId: \"recipekart-190b9\",\r\n  storageBucket: \"recipekart-190b9.appspot.com\",\r\n  messagingSenderId: \"113077810425\",\r\n  appId: \"1:113077810425:web:032cf197712e0675ec1e28\",\r\n};\r\n//initialise firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//this connects to firebase for us\r\n\r\n//initialise services\r\nconst projectFirestore = firebase.firestore();\r\n\r\nexport { projectFirestore };\r\n","import { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport Trashcan from \"../assets/trashcan.svg\";\r\n// styles\r\nimport \"./RecipeList.css\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nexport default function RecipeList({ recipes }) {\r\n  const { mode } = useTheme();\r\n\r\n  if (recipes.length === 0) {\r\n    return <div className=\"error\">No recipes found</div>;\r\n  }\r\n  const handleClick = (recipeID) => {\r\n    projectFirestore.collection(\"recipes\").doc(recipeID).delete();\r\n  };\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      {recipes.map((recipe) => (\r\n        <div key={recipe.id} className={`card ${mode}`}>\r\n          <h3>{recipe.title}</h3>\r\n          <p>{recipe.cookingTime} to make.</p>\r\n          <div>{recipe.method.substring(0, 100)}...</div>\r\n          <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n          <img\r\n            src={Trashcan}\r\n            alt=\"\"\r\n            className=\"delete\"\r\n            onClick={() => handleClick(recipe.id)}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n// styles\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  const [data, setdata] = useState(null);\r\n  const [isPending, setisPending] = useState(false);\r\n  const [error, seterror] = useState(false);\r\n  useEffect(() => {\r\n    setisPending(true);\r\n    const unsub = projectFirestore.collection(\"recipes\").onSnapshot(\r\n      (snapshot) => {\r\n        if (snapshot.empty) {\r\n          seterror(\"No recipes to load\");\r\n          setisPending(false);\r\n          setdata(null);\r\n        } else {\r\n          let results = [];\r\n          snapshot.docs.forEach((doc) => {\r\n            results.push({ id: doc.id, ...doc.data() });\r\n          });\r\n          setdata(results);\r\n          setisPending(false);\r\n        }\r\n      },\r\n      (err) => {\r\n        seterror(err.message);\r\n        setisPending(false);\r\n      }\r\n    );\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n\r\n// styles\r\nimport \"./Recipe.css\";\r\n\r\nexport default function Recipe() {\r\n  const { id } = useParams();\r\n  const { mode } = useTheme();\r\n\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsPending(true);\r\n\r\n    const unsub = projectFirestore\r\n      .collection(\"recipes\")\r\n      .doc(id)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setIsPending(false);\r\n          setRecipe(doc.data());\r\n        } else {\r\n          setIsPending(false);\r\n          setError(`Could not find that recipe`);\r\n        }\r\n      });\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, [id]);\r\n\r\n  // const handleClick = () => {\r\n  //   projectFirestore.collection(\"recipes\").doc(id).update({\r\n  //     title: \"Something completely different\",\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className={`recipe ${mode}`}>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {recipe && (\r\n        <>\r\n          <h2 className=\"page-title\">{recipe.title}</h2>\r\n          <p>Takes {recipe.cookingTime} to cook.</p>\r\n          <ul>\r\n            {recipe.ingredients.map((ing) => (\r\n              <li key={ing}>ing</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"method\">{recipe.method}</p>\r\n          {/* <button onClick={handleClick}>Update me</button> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport \"./Search.css\";\r\nconst Search = () => {\r\n  const queryString = useLocation().search;\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get(\"q\");\r\n  const url = `  http://localhost:3000/recipes?q=` + query;\r\n  const { data, isPending, error } = useFetch(url);\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Data is loading...</p>}\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url, method = \"GET\") => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [options, setoptions] = useState(null);\r\n  const postData = (postData) => {\r\n    setoptions({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(postData),\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n\r\n    const fetchData = async (fetchOptions) => {\r\n      setIsPending(true);\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          ...fetchOptions,\r\n          signal: controller.signal,\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(res.statusText);\r\n        }\r\n        const data = await res.json();\r\n\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"the fetch was aborted\");\r\n        } else {\r\n          setIsPending(false);\r\n          setError(\"Could not fetch the data\");\r\n        }\r\n      }\r\n    };\r\n\r\n    if (method === \"GET\") {\r\n      fetchData();\r\n    }\r\n    if (method === \"POST\" && options) {\r\n      fetchData(options);\r\n    }\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [url, options, method]);\r\n\r\n  return { data, isPending, error, postData };\r\n};\r\n","import { useState, useRef } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// styles\r\nimport \"./Create.css\";\r\n\r\nexport default function Create() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [method, setMethod] = useState(\"\");\r\n  const [cookingTime, setCookingTime] = useState(\"\");\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingredientInput = useRef(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const doc = {\r\n      title,\r\n      ingredients,\r\n      method,\r\n      cookingTime: cookingTime + \" minutes\",\r\n    };\r\n\r\n    try {\r\n      await projectFirestore.collection(\"recipes\").add(doc);\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    const ing = newIngredient.trim();\r\n\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients((prevIngredients) => [...prevIngredients, newIngredient]);\r\n    }\r\n    setNewIngredient(\"\");\r\n    ingredientInput.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2 className=\"page-title\">Add a New Recipe</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Recipe title:</span>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            value={title}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Recipe Ingredients:</span>\r\n          <div className=\"ingredients\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n              value={newIngredient}\r\n              ref={ingredientInput}\r\n            />\r\n            <button onClick={handleAdd} className=\"btn\">\r\n              add\r\n            </button>\r\n          </div>\r\n        </label>\r\n        <p>\r\n          Current ingredients:{\" \"}\r\n          {ingredients.map((i) => (\r\n            <em key={i}>{i}, </em>\r\n          ))}\r\n        </p>\r\n\r\n        <label>\r\n          <span>Recipe Method:</span>\r\n          <textarea\r\n            onChange={(e) => setMethod(e.target.value)}\r\n            value={method}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Cooking time (minutes):</span>\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => setCookingTime(e.target.value)}\r\n            value={cookingTime}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mode-icon.651cf792.svg\";","import { useTheme } from \"../hooks/useTheme\";\r\nimport modeIcon from \"../assets/mode-icon.svg\";\r\n// styles\r\nimport \"./ThemeSelector.css\";\r\n\r\nconst themeColors = [\"#58249c\", \"#249c6b\", \"#b70233\"];\r\n\r\nexport default function ThemeSelector() {\r\n  const { changeColor, changeMode, mode } = useTheme();\r\n  const toggleMode = () => {\r\n    changeMode(mode === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n  return (\r\n    <div className=\"theme-selector\">\r\n      <div className=\"mode-toggle\">\r\n        <img\r\n          src={modeIcon}\r\n          onClick={toggleMode}\r\n          alt=\"\"\r\n          style={{ filter: mode === \"dark\" ? \"invert(100%)\" : \"invert(20%)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"theme-buttons\">\r\n        {themeColors.map((color) => (\r\n          <div\r\n            key={color}\r\n            onClick={() => changeColor(color)}\r\n            style={{ background: color }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\n\nimport Home from \"./pages/home/Home\";\nimport Recipe from \"./pages/recipe/Recipe\";\nimport Search from \"./pages/search/Search\";\nimport Create from \"./pages/create/Create\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport { useTheme } from \"./hooks/useTheme\";\nfunction App() {\n  const { mode } = useTheme();\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/recipes/:id\">\n            <Recipe />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}